name: WPF App Build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "tag: git tag version. (ex. 1.0.0)"
        required: true
      dry-run:
        description: "dry-run: true will skip release."
        required: true
        default: false
        type: boolean
      prerelease:
        description: "prerelease: true will create a pre-release."
        required: true
        default: false
        type: boolean

env:
  PROJECT_NAME: FAManagementStudio
  APP_PATH: ./FAManagementStudio/FAManagementStudio.csproj
  DOTNET_VERSION: 9.0.x
  BUILD_CONFIGURATION: Release
  OUTPUT_DIR: ./publish
  ZIP_BETA: FAManagementStudio_x64_beta.zip
  ZIP_STABLE: FAManagementStudio_x64_stable.zip

jobs:
  build:
    name: Build and Publish WPF App
    runs-on: windows-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Build project
        run: dotnet build ${{ env.APP_PATH }} -c ${{ env.BUILD_CONFIGURATION }} -p:Version=${{ inputs.tag }}

      - name: Publish project
        run: dotnet publish ${{ env.APP_PATH }} -c ${{ env.BUILD_CONFIGURATION }} -p:Version=${{ inputs.tag }} --self-contained true --runtime win-x64 --output ${{ env.OUTPUT_DIR }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}
          path: ${{ env.OUTPUT_DIR }}

  release:
    name: Create GitHub Release and Upload ZIP
    if: ${{ !inputs.dry-run }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install zip (if missing)
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}
          path: artifact

      - name: Create zip file
        run: |
          cd artifact
          zip -r ../${{ inputs.prerelease && env.ZIP_BETA || env.ZIP_STABLE }} .

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ inputs.prerelease && format('{0}-pre-v{1}', env.PROJECT_NAME, inputs.tag) || format('{0}-v{1}', env.PROJECT_NAME, inputs.tag) }}
          tag_name: ${{ inputs.prerelease && format('{0}-pre-v{1}', env.PROJECT_NAME, inputs.tag) || format('{0}-v{1}', env.PROJECT_NAME, inputs.tag) }}
          target_commitish: ${{ github.ref }}
          generate_release_notes: true
          prerelease: ${{ inputs.prerelease }}
          files: ${{ inputs.prerelease && format('./{0}', env.ZIP_BETA) || format('./{0}', env.ZIP_STABLE) }}
